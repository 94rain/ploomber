name: CI Windows

on:
  push:
    branches: [ master, dev]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup
      run: |
        Invoke-WebRequest https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe -O miniconda.exe
        start /wait miniconda.exe /S

        conda create -q -n conda-env python=${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        eval "$(conda shell.bash hook)"
        conda activate conda-env
        # install pygraphviz
        conda install -y pygraphviz -c conda-forge

        # Test vanilla installation, make sure core modules are importable
        pip install .
        python -c 'import ploomber'
        python -c 'import ploomber.tasks'
        python -c 'import ploomber.products'
        python -c 'import ploomber.clients'

        # install requirements
        pip install -r examples/pipeline/intermediate/requirements.txt
        pip install -r requirements.txt
        pip install .[test]

        # install R and IR kernel
        conda install -y r-base r-irkernel -c conda-forge
        echo "IRkernel::installspec()" | Rscript -

        # install sample package for tests
        bash install_test_pkg.sh

    - name: Run tests
      run: |
        eval "$(conda shell.bash hook)"
        conda activate conda-env
        pytest tests/test_cli_custom.py::test_run_spec